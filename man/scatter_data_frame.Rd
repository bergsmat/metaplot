% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scatter.R
\name{scatter_data_frame}
\alias{scatter_data_frame}
\title{Scatterplot Function for Data Frame}
\usage{
scatter_data_frame(x, yvar, xvar, groups = NULL, facets = NULL,
  log = getOption("metaplot_scatter_log", FALSE),
  ylog = getOption("metaplot_scatter_ylog", log),
  xlog = getOption("metaplot_scatter_xlog", log),
  crit = getOption("metaplot_scatter_crit", 1.3),
  yref = getOption("metaplot_scatter_yref", metaplot_ref),
  xref = getOption("metaplot_scatter_xref", metaplot_ref),
  ylab = getOption("metaplot_scatter_ylab", axislabel),
  xlab = getOption("metaplot_scatter_xlab", axislabel),
  ysmooth = getOption("metaplot_scatter_ysmooth", FALSE),
  xsmooth = getOption("metaplot_scatter_xsmooth", FALSE),
  iso = getOption("metaplot_scatter_iso", FALSE),
  na.rm = getOption("metaplot_scatter_na_rm", TRUE),
  aspect = getOption("metaplot_scatter_aspect", 1),
  space = getOption("metaplot_scatter_space", "right"),
  key = getOption("metaplot_scatter_key", "metaplot_key"),
  as.table = getOption("metaplot_scatter_as_table", TRUE),
  prepanel = getOption("metaplot_scatter_prepanel", NULL),
  scales = getOption("metaplot_scatter_scales", NULL),
  panel = getOption("metaplot_scatter_panel", scatter_panel),
  colors = getOption("metaplot_scatter_colors", NULL),
  symbols = getOption("metaplot_scatter_symbols", NULL),
  points = getOption("metaplot_scatter_points", TRUE),
  lines = getOption("metaplot_scatter_lines", FALSE),
  main = getOption("metaplot_scatter_main", NULL),
  sub = getOption("metaplot_scatter_sub", NULL),
  subscripts = getOption("metaplot_scatter_subscripts", TRUE),
  par.settings = getOption("metaplot_scatter_par_settings", NULL),
  padding = getOption("metaplot_scatter_padding", 1),
  ref.col = getOption("metaplot_scatter_ref_col", "grey"),
  ref.lty = getOption("metaplot__scatter_ref_lty", "solid"),
  ref.alpha = getOption("metaplot_scatter_ref_alpha", 1),
  smooth.lty = getOption("metaplot_scatter_smooth_lty", "dashed"),
  smooth.alpha = getOption("metaplot_scatter_smooth_alpha", 1),
  fit = getOption("metaplot_scatter_fit", conf),
  fit.lty = getOption("metaplot_scatter_fit_lty", "solid"),
  fit.alpha = getOption("metaplot_scatter_fit_alpha", 1),
  conf = getOption("metaplot_scatter_conf", FALSE),
  conf.alpha = getOption("metaplot_scatter_conf_alpha", 0.3),
  loc = getOption("metaplot_scatter_loc", 0),
  global = getOption("metaplot_scatter_global", FALSE),
  global.col = getOption("metaplot_scatter_global_col", "grey"),
  msg = getOption("metaplot_scatter_msg", "metastats"),
  gg = getOption("metaplot_scatter_gg", FALSE), ...)
}
\arguments{
\item{x}{data.frame}

\item{yvar}{character: y variable(s)}

\item{xvar}{character: x variable}

\item{groups}{optional grouping variable; ignored if more than one \code{yvar}}

\item{facets}{optional conditioning variables}

\item{log}{a default shared by \code{ylog} and \code{xlog}}

\item{ylog}{log transform y axis (auto-selected if NA)}

\item{xlog}{log transform x axis (auto-selected if NA)}

\item{crit}{if ylog or xlog missing, log transform if mean/median ratio for non-missing values is greater than crit}

\item{yref}{reference line from y axis; can be function(x = x, var = yvar, ...)}

\item{xref}{reference line from x axis; can be function(x = x, var = xvar, ...)}

\item{ylab}{y axis label; can be function(x = x, var = yvar, log = ylog, ..)}

\item{xlab}{x axis label; can be function(x = x, var = xvar, log = xlog, ..)}

\item{ysmooth}{supply loess smooth of y on x}

\item{xsmooth}{supply loess smmoth of x on y}

\item{iso}{plot line of unity (auto-selected if NA)}

\item{na.rm}{whether to remove data points with one or more missing coordinates}

\item{aspect}{passed to \code{\link[lattice]{xyplot}}}

\item{space}{location of key (right, left, top, bottom)}

\item{key}{list: passed to \code{\link[lattice]{xyplot}} as \code{auto.key} or to \code{\link[ggplot2]{theme}}; can be a function groups name, groups levels, points, lines, space, gg, and \dots .  See \code{\link{metaplot_key}}.}

\item{as.table}{passed to \code{\link[lattice]{xyplot}}}

\item{prepanel}{passed to \code{\link[lattice]{xyplot}} (guessed if NULL)}

\item{scales}{passed to \code{\link[lattice]{xyplot}} (guessed if NULL)}

\item{panel}{name or definition of panel function}

\item{colors}{replacements for default colors in group order}

\item{symbols}{replacements for default symbols in group order}

\item{points}{whether to plot points for each group: logical, or alpha values between 0 and 1}

\item{lines}{whether to plot lines for each group: logical, or alpha values between 0 and 1}

\item{main}{character, or a function of x, yvar, xvar, groups, facets, and log}

\item{sub}{character, or a function of x, yvar, xvar, groups, facets, and log}

\item{subscripts}{passed to \code{\link[lattice]{xyplot}}}

\item{par.settings}{passed to \code{\link[lattice]{xyplot}} (calculated if NULL)}

\item{padding}{numeric (will be recycled to length 4) giving plot margins in default units: top, right, bottom, left (in multiples of 5.5 points for ggplot)}

\item{ref.col}{reference line color}

\item{ref.lty}{reference line type}

\item{ref.alpha}{reference line alpha}

\item{smooth.lty}{smooth line type}

\item{smooth.alpha}{smooth alpha}

\item{fit}{draw a linear fit of y ~ x}

\item{fit.lty}{fit line type}

\item{fit.alpha}{fit alpha}

\item{conf}{logical, or width for a confidence region around a linear fit; passed to \code{\link{region}}; \code{TRUE} defaults to 95 percent confidence interval; may not make sense if xlog is TRUE}

\item{conf.alpha}{alpha transparency for confidence region}

\item{loc}{where to print statistics on a panel; suppressed for grouped plots an facetted ggplots}

\item{global}{if TRUE, xsmooth, ysmooth, fit, and conf are applied to all data rather than groupwise}

\item{global.col}{color for global aesthetics}

\item{msg}{a function to print text on a panel: called with x values, y values, and \dots.}

\item{gg}{logical: whether to generate \code{ggplot} instead of \code{trellis}}

\item{...}{passed to \code{\link{region}}}
}
\description{
Scatterplot function for class 'data.frame'.
}
\examples{
library(magrittr)
library(dplyr)
attr(Theoph$conc,'label') <- 'theophylline concentration'
attr(Theoph$conc,'guide') <- 'mg/L'
attr(Theoph$Time,'label') <- 'time'
attr(Theoph$Time,'guide') <- 'h'
attr(Theoph$Subject,'guide') <- '////'
scatter_data_frame(Theoph, 'conc', 'Time')
scatter_data_frame(Theoph, 'conc','Time', 'Subject')
scatter_data_frame(Theoph, 'conc','Time', facets = 'Subject')
scatter_data_frame(Theoph \%>\% filter(conc > 0), 'conc','Time', 'Subject',ylog = TRUE, yref = 5)
scatter_data_frame(Theoph, 'conc','Time', 'Subject',ysmooth = TRUE)
scatter_data_frame(Theoph, 'conc','Time', 'Subject',ysmooth = TRUE,global = TRUE)
scatter_data_frame(Theoph, 'conc','Time', conf = TRUE, loc = 3, yref = 6)
scatter_data_frame(Theoph, 'conc','Time', conf = TRUE, loc = 3, yref = 6)
}
\seealso{
\code{\link{scatter_panel}}

Other bivariate plots: \code{\link{iso_prepanel}},
  \code{\link{metaplot.data.frame}},
  \code{\link{scatter.data.frame}}, \code{\link{scatter}}

Other metaplot: \code{\link{boxplot_data_frame}},
  \code{\link{categorical_data_frame}},
  \code{\link{corsplom_data_frame}},
  \code{\link{densplot_data_frame}},
  \code{\link{metaplot_key}}, \code{\link{metaplot}},
  \code{\link{test_metaplot}}

Other scatter: \code{\link{metaplot_key}},
  \code{\link{scatter.data.frame}},
  \code{\link{scatter_panel}}, \code{\link{scatter}}
}
